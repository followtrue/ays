// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/modules/rpc/proto/job.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JobRequest struct {
	Type                 int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` // 1 command，2 调用go方法
	Command              string   `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Timeout              int32    `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Id                   int64      `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobRequest) Reset()         { *m = JobRequest{} }
func (m *JobRequest) String() string { return proto.CompactTextString(m) }
func (*JobRequest) ProtoMessage()    {}
func (*JobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b7e4694da598261, []int{0}
}

func (m *JobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobRequest.Unmarshal(m, b)
}
func (m *JobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobRequest.Marshal(b, m, deterministic)
}
func (m *JobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobRequest.Merge(m, src)
}
func (m *JobRequest) XXX_Size() int {
	return xxx_messageInfo_JobRequest.Size(m)
}
func (m *JobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobRequest proto.InternalMessageInfo

func (m *JobRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *JobRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *JobRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *JobRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type JobResponse struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobResponse) Reset()         { *m = JobResponse{} }
func (m *JobResponse) String() string { return proto.CompactTextString(m) }
func (*JobResponse) ProtoMessage()    {}
func (*JobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b7e4694da598261, []int{1}
}

func (m *JobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobResponse.Unmarshal(m, b)
}
func (m *JobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobResponse.Marshal(b, m, deterministic)
}
func (m *JobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobResponse.Merge(m, src)
}
func (m *JobResponse) XXX_Size() int {
	return xxx_messageInfo_JobResponse.Size(m)
}
func (m *JobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JobResponse proto.InternalMessageInfo

func (m *JobResponse) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *JobResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*JobRequest)(nil), "rpc.JobRequest")
	proto.RegisterType((*JobResponse)(nil), "rpc.JobResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Task service

type JobClient interface {
	Run(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error)
}

type jobClient struct {
	cc *grpc.ClientConn
}

func NewJobClient(cc *grpc.ClientConn) JobClient {
	return &jobClient{cc}
}

func (c *jobClient) Run(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error) {
	out := new(JobResponse)
	err := grpc.Invoke(ctx, "/rpc.Job/Run", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Task service

type JobServer interface {
	Run(context.Context, *JobRequest) (*JobResponse, error)
}

func RegisterJobServer(s *grpc.Server, srv JobServer) {
	s.RegisterService(&_Job_serviceDesc, srv)
}

func _Job_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Job/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServer).Run(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Job_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Job",
	HandlerType: (*JobServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _Job_Run_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "job.proto",
}

func init() { proto.RegisterFile("src/modules/rpc/proto/job.proto", fileDescriptor_4b7e4694da598261) }

var fileDescriptor_4b7e4694da598261 = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0x4d, 0x4a, 0xc0, 0x30,
	0x10, 0x85, 0x4d, 0x63, 0x2b, 0x8e, 0xa0, 0x12, 0x44, 0x82, 0x1b, 0x4b, 0x57, 0xc5, 0x45, 0x83,
	0xba, 0xf4, 0x06, 0x5d, 0x49, 0x6e, 0x60, 0x7e, 0x16, 0x15, 0xd3, 0x89, 0x93, 0xe4, 0xfe, 0x62,
	0xda, 0xd2, 0xdd, 0x7c, 0x33, 0xf0, 0xcd, 0x7b, 0xf0, 0x9c, 0xc8, 0xaa, 0x80, 0xae, 0xfc, 0xf8,
	0xa4, 0x28, 0x5a, 0x15, 0x09, 0x33, 0xaa, 0x6f, 0x34, 0x53, 0x9d, 0x04, 0xa7, 0x68, 0x87, 0x4f,
	0x80, 0x19, 0x8d, 0xf6, 0xbf, 0xc5, 0xa7, 0x2c, 0x24, 0x5c, 0x59, 0x0c, 0xe1, 0x6b, 0x75, 0xb2,
	0xe9, 0xd9, 0x78, 0xad, 0x0f, 0xfc, 0xbf, 0xe4, 0x25, 0x78, 0x2c, 0x59, 0xf2, 0x9e, 0x8d, 0xad,
	0x3e, 0x50, 0xdc, 0x42, 0xb3, 0x38, 0x79, 0xd9, 0xb3, 0x91, 0xeb, 0x66, 0x71, 0xc3, 0x07, 0xdc,
	0x54, 0x63, 0x8a, 0xb8, 0x26, 0x2f, 0x1e, 0xa1, 0xc3, 0x92, 0x63, 0xc9, 0x92, 0x55, 0xe3, 0x4e,
	0xe2, 0x01, 0x5a, 0x4f, 0x84, 0xb4, 0x3f, 0xda, 0xe0, 0xed, 0x15, 0xf8, 0x8c, 0x46, 0xbc, 0x00,
	0xd7, 0x65, 0x15, 0x77, 0x13, 0x45, 0x3b, 0x9d, 0xf9, 0x9e, 0xee, 0xcf, 0xc5, 0xa6, 0x1f, 0x2e,
	0x4c, 0x57, 0xdb, 0xbc, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x6f, 0xbc, 0xf5, 0xf0, 0x00,
	0x00, 0x00,
}
